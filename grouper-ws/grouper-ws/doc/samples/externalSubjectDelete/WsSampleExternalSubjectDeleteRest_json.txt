Grouper web service sample of service: externalSubjectDelete, WsSampleExternalSubjectDeleteRest, manually written lite/rest, format: json, for version: 2.5.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_5_000/externalSubjects HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 135
Content-Type: application/json; charset=UTF-8

{
  "WsRestExternalSubjectDeleteRequest":{
    "wsExternalSubjectLookups":[
      {
        "identifier":"a_ident@b.com"
      },
      {
        "identifier":"doesntExist@b.com"
      }
    ]
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200
Set-Cookie: JSESSIONID=03557E0E0D5F940D9EFDDCB3E1BD0DB2;path=/grouper-ws/;HttpOnly
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/json;charset=UTF-8
Content-Length: 1060
Date: Tue, 31 Mar 2020 20:26:17 GMT
Connection: close
Server: Apache TomEE

{
  "WsExternalSubjectDeleteResults":{
    "responseMetadata":{
      "millis":"14",
      "serverVersion":"2.5.0"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":"Success for: clientVersion: 2.5.0, wsExternalSubjectLookups: Array size: 2: [0]: WsExternalSubjectLookup[identifier=a_ident@b.com]\n[1]: WsExternalSubjectLookup[identifier=doesntExist@b.com]\n\n, actAsSubject: null, txType: NONE, paramNames: \n, params: null",
      "success":"T"
    },
    "results":[
      {
        "resultMetadata":{
          "resultCode":"SUCCESS_EXTERNAL_SUBJECT_NOT_FOUND",
          "resultMessage":"Cant find external subject: 'WsExternalSubjectLookup[identifier=a_ident@b.com,\n  externalSubjectFindResult=EXTERNAL_SUBJECT_NOT_FOUND]'.",
          "success":"T"
        },
        "wsExternalSubject":{
          "enabled":"T",
          "identifier":"a_ident@b.com"
        }
        
      },
      {
        "resultMetadata":{
          "resultCode":"SUCCESS_EXTERNAL_SUBJECT_NOT_FOUND",
          "resultMessage":"Cant find external subject: 'WsExternalSubjectLookup[identifier=doesntExist@b.com,\n  externalSubjectFindResult=EXTERNAL_SUBJECT_NOT_FOUND]'.",
          "success":"T"
        },
        "wsExternalSubject":{
          "enabled":"T",
          "identifier":"doesntExist@b.com"
        }
      }
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.group;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsExternalSubjectDeleteResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsExternalSubjectLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.externalSubject.WsRestExternalSubjectDeleteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleExternalSubjectDeleteRest implements WsSampleRest {

  /**
   * external subject delete lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void externalSubjectDeleteLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/externalSubjects");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestExternalSubjectDeleteRequest externalSubjectDelete = new WsRestExternalSubjectDeleteRequest();
      
      WsExternalSubjectLookup wsExternalSubjectLookup = new WsExternalSubjectLookup("a_ident@b.com");
      WsExternalSubjectLookup wsExternalSubjectLookup2 = new WsExternalSubjectLookup("doesntExist@b.com");
      WsExternalSubjectLookup[] wsExternalSubjectLookups = new WsExternalSubjectLookup[]{wsExternalSubjectLookup, wsExternalSubjectLookup2};
      externalSubjectDelete.setWsExternalSubjectLookups(wsExternalSubjectLookups);
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(externalSubjectDelete);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsExternalSubjectDeleteResults wsExternalSubjectDeleteResults = (WsExternalSubjectDeleteResults)result;
      
      String resultMessage = wsExternalSubjectDeleteResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsExternalSubjectDeleteResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    externalSubjectDeleteLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    externalSubjectDeleteLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.5.0, result code: SUCCESS, result message: Success for: clientVersion: 2.5.0, wsExternalSubjectLookups: Array size: 2: [0]: WsExternalSubjectLookup[identifier=a_ident@b.com]
[1]: WsExternalSubjectLookup[identifier=doesntExist@b.com]

, actAsSubject: null, txType: NONE, paramNames: 
, params: null
