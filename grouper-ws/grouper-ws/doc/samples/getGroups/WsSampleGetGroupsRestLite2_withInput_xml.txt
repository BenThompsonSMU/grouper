Grouper web service sample of service: getGroups, WsSampleGetGroupsRestLite2, manually written lite/rest, type: _withInput, format: xml, for version: 2.5.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_5_000/subjects/sources/jdbc/subjectId/test.subject.0/groups HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 191
Content-Type: application/xml; charset=UTF-8

<WsRestGetGroupsLiteRequest>
  <actAsSubjectId>GrouperSystem</actAsSubjectId>
  <includeGroupDetail>T</includeGroupDetail>
  <includeSubjectDetail>T</includeSubjectDetail>
</WsRestGetGroupsLiteRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200
Set-Cookie: JSESSIONID=4533C12438CFE7FD001E7A60D800E1EC;path=/grouper-ws/;HttpOnly
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/xml;charset=UTF-8
Transfer-Encoding: chunked
Date: Tue, 31 Mar 2020 20:37:42 GMT
Connection: close
Server: Apache TomEE

3ff
<WsGetGroupsLiteResult>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: 2.5.0, subjectLookups: Array size: 1: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectSourceId=jdbc]

memberFilter: All, includeGroupDetail: true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem]
, params: null
fieldName1: null
, scope: null, wsStemLookup: WsStemLookup[]
, stemScope: null, enabled: null, pageSize: null, pageNumber: null, sortString: null, ascending: null
, pointInTimeFrom: null, pointInTimeTo: null</resultMessage>
    <success>T</success>
  </resultMetadata>
  <subjectAttributeNames>
    <string>name</string>
    <string>description</string>
  </subjectAttributeNames>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>188</millis>
    <serverVersion>2.5.0</serverVersion>
  </responseMetadata>
  <wsGroups>
    <WsGroup>
      <extension>role</extension>
      <typeOfGroup>role</typeOfGroup>
      <displayExtension>role</displayExtension>
      <displayName>a stem:role</displayName>
      <name>aStem:role</name>
      <uuid>3befb91c854541f68a4
3ff
dcb75fe1f92ee</uuid>
      <detail>
        <hasComposite>F</hasComposite>
        <typeNames/>
        <createSubjectId>GrouperSystem</createSubjectId>
        <createTime>2020/03/31 00:25:09.450</createTime>
        <isCompositeFactor>F</isCompositeFactor>
        <modifySubjectId>GrouperSystem</modifySubjectId>
        <modifyTime>2020/03/31 00:25:09.468</modifyTime>
      </detail>
      <idIndex>10035</idIndex>
      <enabled>T</enabled>
    </WsGroup>
    <WsGroup>
      <extension>grouperMessageRole</extension>
      <typeOfGroup>role</typeOfGroup>
      <displayExtension>grouperMessageRole</displayExtension>
      <displayName>etc:attribute:messages:grouperMessageRole</displayName>
      <name>etc:attribute:messages:grouperMessageRole</name>
      <uuid>341ad64d708b4fe7a78dab357dcdfff4</uuid>
      <detail>
        <hasComposite>F</hasComposite>
        <typeNames/>
        <createSubjectId>GrouperSystem</createSubjectId>
        <createTime>2020/03/30 22:58:27.197</createTime>
        <isCompositeFactor>F</isCompositeFactor>
        <modifySubjectId>GrouperSystem</modifySubjectId>
        <modifyTime>2020/03/30 22:58:27.226</modifyTime>
      </detail>
      <idIndex>10002</idIndex>
      <enabled>T</enabled>
    </WsGroup>
    <WsGroup>
      <
3fc
extension>
      </extension>
      <typeOfGroup>group</typeOfGroup>
      <displayExtension>group113</displayExtension>
      <description>description</description>
      <displayName>test:group113</displayName>
      <name>test:group113</name>
      <uuid>4431f675c7d04659b7efffa19410b699</uuid>
      <detail>
        <hasComposite>F</hasComposite>
        <typeNames/>
        <createSubjectId>GrouperSystem</createSubjectId>
        <createTime>2020/03/30 22:58:54.934</createTime>
        <isCompositeFactor>F</isCompositeFactor>
        <modifySubjectId>GrouperSystem</modifySubjectId>
        <modifyTime>2020/03/30 22:58:55.500</modifyTime>
      </detail>
      <idIndex>10020</idIndex>
      <enabled>T</enabled>
    </WsGroup>
    <WsGroup>
      <extension>testGroup</extension>
      <typeOfGroup>group</typeOfGroup>
      <displayExtension>testGroup</displayExtension>
      <displayName>test:testGroup</displayName>
      <name>test:testGroup</name>
      <uuid>6488e4e9d11d405598a420954c86fabf</uuid>
      <detail>
        <hasComposite>F</hasComposite>
        <typeNames/>
        <createSubjectId>GrouperSystem</createSubjectId>
        <createTime>2020/03/31 00:25:05.959</createTime>
        <isCompositeFactor>F</isCompositeFactor>
        <
1da
modifySubjectId>
        </modifySubjectId>
        <modifyTime>2020/03/31 13:37:40.819</modifyTime>
      </detail>
      <idIndex>10031</idIndex>
      <enabled>T</enabled>
    </WsGroup>
  </wsGroups>
  <wsSubject>
    <resultCode>SUCCESS</resultCode>
    <success>T</success>
    <id>test.subject.0</id>
    <name>my name is test.subject.0</name>
    <sourceId>jdbc</sourceId>
    <attributeValues>
      <string>my name is test.subject.0</string>
      <string>description.test.subject.0</string>
    </attributeValues>
  </wsSubject>
</WsGetGroupsLiteResult>
0


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.group;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsGetGroupsLiteResult;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestGetGroupsLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetGroupsRestLite2 implements WsSampleRest {

  /**
   * get groups lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getGroupsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/subjects/sources/jdbc/subjectId/test.subject.0/groups");
      
      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetGroupsLiteRequest getGroupsLite = new WsRestGetGroupsLiteRequest();

      // set the act as id
      getGroupsLite.setActAsSubjectId("GrouperSystem");

      getGroupsLite.setIncludeGroupDetail("T");
      getGroupsLite.setIncludeSubjectDetail("T");
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getGroupsLite);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object resultObject = wsSampleRestType.getWsLiteResponseContentType().parseString(response);
    
      //see if problem
      if (resultObject instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)resultObject).getResultMetadata().getResultMessage());
      }

      //convert to object (from xhtml, xml, json, etc)
      WsGetGroupsLiteResult wsGetGroupsLiteResult = (WsGetGroupsLiteResult)resultObject;
      
      String resultMessage = wsGetGroupsLiteResult.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetGroupsLiteResult.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getGroupsLite(WsSampleRestType.xhtml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getGroupsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //allow all
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.5.0, result code: SUCCESS, result message: Success for: clientVersion: 2.5.0, subjectLookups: Array size: 1: [0]: WsSubjectLookup[subjectId=test.subject.0,subjectSourceId=jdbc]

memberFilter: All, includeGroupDetail: true, actAsSubject: WsSubjectLookup[subjectId=GrouperSystem]
, params: null
 fieldName1: null
, scope: null, wsStemLookup: WsStemLookup[]
, stemScope: null, enabled: null, pageSize: null, pageNumber: null, sortString: null, ascending: null
, pointInTimeFrom: null, pointInTimeTo: null
