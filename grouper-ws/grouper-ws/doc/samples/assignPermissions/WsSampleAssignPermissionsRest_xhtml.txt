Grouper web service sample of service: assignPermissions, WsSampleAssignPermissionsRest, manually written lite/rest, format: xhtml, for version: 2.5.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_5_000/permissionAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.1
Host: localhost:8092
Content-Length: 1062
Content-Type: application/xhtml+xml; charset=UTF-8

<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>WsRestAssignPermissionsRequest</title>
  </head>
  <body>
    <div title="WsRestAssignPermissionsRequest">
      <div class="actAsSubjectLookup" title="WsSubjectLookup"/>
      <ul class="actions">
        <li>write</li>
      </ul>
      <p class="assignmentDisabledTime"/>
      <p class="assignmentEnabledTime"/>
      <p class="assignmentNotes"/>
      <p class="clientVersion"/>
      <p class="delegatable"/>
      <p class="disallowed"/>
      <p class="includeGroupDetail"/>
      <p class="includeSubjectDetail"/>
      <p class="permissionAssignOperation">assign_permission</p>
      <ul class="permissionDefNameLookups">
        <li title="WsAttributeDefNameLookup">
          <p class="idIndex"/>
          <p class="name">aStem:permissionDefName</p>
          <p class="uuid"/>
        </li>
      </ul>
      <p class="permissionType">role</p>
      <ul class="roleLookups">
        <li title="WsGroupLookup">
          <p class="groupName">aStem:role</p>
          <p class="idIndex"/>
          <p class="uuid"/>
        </li>
      </ul>
    </div>
  </body>
</html>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200
Set-Cookie: JSESSIONID=2C73D5F89326B14572D8CF553C57523D;path=/grouper-ws/;HttpOnly
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: application/xhtml+xml;charset=UTF-8
Transfer-Encoding: chunked
Date: Tue, 31 Mar 2020 20:20:13 GMT
Connection: close
Server: Apache TomEE

ed4
<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>WsAssignPermissionsResults</title>
  </head>
  <body>
    <div title="WsAssignPermissionsResults">
      <div class="responseMetadata" title="WsResponseMeta">
        <p class="millis">75</p>
        <p class="resultWarnings"/>
        <p class="serverVersion">2.5.0</p>
      </div>
      <div class="resultMetadata" title="WsResultMeta">
        <p class="resultCode">SUCCESS</p>
        <p class="resultCode2"/>
        <p class="resultMessage">, Found 1 results.</p>
        <p class="success">T</p>
      </div>
      <ul class="wsAssignPermissionResults">
        <li title="WsAssignPermissionResult">
          <p class="changed">F</p>
          <p class="deleted">F</p>
          <ul class="wsAttributeAssigns">
            <li title="WsAttributeAssign">
              <p class="attributeAssignActionId">74f1412a22bf4b239b9421095df79f41</p>
              <p class="attributeAssignActionName">write</p>
              <p class="attributeAssignActionType">immediate</p>
              <p class="attributeAssignDelegatable">FALSE</p>
              <p class="attributeAssignType">group</p>
              <p class="attributeDefId">82bd0a56a05f45d2b49dc5956670d41f</p>
              <p class="attributeDefName">aStem:permissionDef</p>
              <p class="attributeDefNameId">2e849c0f71a446f6bf89a490cf57c376</p>
              <p class="attributeDefNameName">aStem:permissionDefName</p>
              <p class="createdOn">2020/03/31 13:19:27.323</p>
              <p class="disabledTime"/>
              <p class="disallowed">F</p>
              <p class="enabled">T</p>
              <p class="enabledTime"/>
              <p class="id">bbc4780f5301439cb1e40765d8955c76</p>
              <p class="lastUpdated">2020/03/31 13:19:27.323</p>
              <p class="notes"/>
              <p class="ownerAttributeAssignId"/>
              <p class="ownerAttributeDefId"/>
              <p class="ownerAttributeDefName"/>
              <p class="ownerGroupId">3befb91c854541f68a4dcb75fe1f92ee</p>
              <p class="ownerGroupName">aStem:role</p>
              <p class="ownerMemberId"/>
              <p class="ownerMemberSourceId"/>
              <p class="ownerMemberSubjectId"/>
              <p class="ownerMembershipId"/>
              <p class="ownerStemId"/>
              <p class="ownerStemName"/>
            </li>
          </ul>
        </li>
      </ul>
      <ul class="wsAttributeDefNames">
        <li title="WsAttributeDefName">
          <p class="attributeDefId">82bd0a56a05f45d2b49dc5956670d41f</p>
          <p class="attributeDefName">aStem:permissionDef</p>
          <p class="description"/>
          <p class="displayExtension">permissionDefName</p>
          <p class="displayName">a stem:permissionDefName</p>
          <p class="extension">permissionDefName</p>
          <p class="idIndex">10281</p>
          <p class="name">aStem:permissionDefName</p>
          <p class="uuid">2e849c0f71a446f6bf89a490cf57c376</p>
        </li>
      </ul>
      <ul class="wsAttributeDefs">
        <li title="WsAttributeDef">
          <p class="assignToAttributeDef">F</p>
          <p class="assignToAttributeDefAssignment">F</p>
          <p class="assignToEffectiveMembership">F</p>
          <p class="assignToEffectiveMembershipAssignment">F</p>
          <p class="assignToGroup">F</p>
          <p class="assignToGroupAssignment">F</p>
          <p class="assignToImmediateMembership">F</p>
          <p class="assignToImmediateMembershipAssignment">F</p>
          <p class="assignToMember">F</p>
          <p class="assignToMemberAssignment">F</p>
          <p class="assignToStem">F</p>
          <p class="assignToStemAssignment">F</p>
          <p class="attributeDefType">perm</p>
          <p class="description"/>
          <p class="extension">permissionDef</p>
          <p class="idIndex">10085</p>
          <p class="multiAssignable">F</p>
          <p class="multiValued">F</p>
          <p class="name">aStem:permissionDef</p>
          <p class="uuid">82bd0a56a05f45d2b49dc5956670d41f</p>
          <p class="valueType">marker</p>
        </li>
      </ul>
      <ul class="wsGroups">
        <li title="WsGroup">
          <p class="alternateName"/>
          <p class="description"/>
          <div class="detail" title="WsGroupDetail"/>
          <p class="disabledTime"/>
          <p class="displayExtension">role</p>
          <p class="displayName">a stem:role</p>
          <p class="enabled">T</p>
          <p class="enabledTime"/>
          <p class="extension">role</p>
          <p class="idIndex">10035</p>
          <p class="name">aStem:role</p>
          <p class="typeOfGroup">role</p>
          <p class="uuid">3befb91c854541f68a4dcb75fe1f92ee</p>
        </li>
      </ul>
    </div>
  </body>
</html>
0


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.permission;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsAssignPermissionsResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefNameLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.permission.WsRestAssignPermissionsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignPermissionsRest implements WsSampleRest {

  /**
   * permission assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void assignPermissions(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/permissionAssignments";
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestAssignPermissionsRequest assignPermissions = new WsRestAssignPermissionsRequest();

      assignPermissions.setPermissionType("role");
      assignPermissions.setActions(new String[]{"write"});
      WsGroupLookup wsGroupLookup = new WsGroupLookup("aStem:role", null);
      assignPermissions.setRoleLookups(new WsGroupLookup[]{wsGroupLookup});
      assignPermissions.setPermissionAssignOperation("assign_permission");

      WsAttributeDefNameLookup wsAttributeDefNameLookup = new WsAttributeDefNameLookup();
      wsAttributeDefNameLookup.setUuid("");
      wsAttributeDefNameLookup.setName("aStem:permissionDefName");
      assignPermissions.setPermissionDefNameLookups(new WsAttributeDefNameLookup[]{wsAttributeDefNameLookup});
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(assignPermissions);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsAssignPermissionsResults wsAssignPermissionsResults = (WsAssignPermissionsResults)result;
      
      String resultMessage = wsAssignPermissionsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsAssignPermissionsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    assignPermissions(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignPermissions(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.5.0, result code: SUCCESS, result message: , Found 1 results.
